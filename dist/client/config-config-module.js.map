{"version":3,"sources":["./src/app/config/config-routing.module.ts","./src/app/config/config.module.ts","./src/app/config/new-role/new-role.component.ts","./src/app/config/new-role/new-role.component.html","./src/app/config/new-user/new-user.component.ts","./src/app/config/new-user/new-user.component.html","./src/app/config/roles/roles.component.ts","./src/app/config/roles/roles.component.html","./src/app/config/user-list/user-list.component.ts","./src/app/config/user-list/user-list.component.html","./src/app/shared/shared.service.ts"],"names":[],"mappings":"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","file":"config-config-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { NewRoleComponent } from './new-role/new-role.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'user-list', component: UserListComponent },\r\n    { path: 'new-user', component: NewUserComponent },\r\n    { path: 'roles', component: RolesComponent },\r\n    { path: 'new-role', component: NewRoleComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ConfigRoutingModule {\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { ConfigRoutingModule } from './config-routing.module';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { AppMaterialModule } from '../material-module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RolesComponent } from './roles/roles.component';\nimport { NewRoleComponent } from './new-role/new-role.component';\r\n\r\n@NgModule({\r\n    declarations: [UserListComponent, NewUserComponent, RolesComponent, NewRoleComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AppMaterialModule,\r\n        ConfigRoutingModule\r\n    ]\r\n})\r\nexport class ConfigModule { }","import { Component, OnInit } from '@angular/core';\nimport { nav } from 'src/app/shared/navbar.data';\nimport { SharedService } from 'src/app/shared/shared.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-role',\n  templateUrl: './new-role.component.html',\n  styleUrls: ['./new-role.component.css']\n})\nexport class NewRoleComponent implements OnInit {\n  public navItem = nav;\n  public form;\n  public error;\n  constructor(private fb: FormBuilder, private sharedService: SharedService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      roleName: ['', [Validators.required]],\n      access: ['', [Validators.required]]\n    });\n  }\n\n  public ChkModule_Change(event, listId) {\n    debugger;\n  }\n\n  public CreateNew_Click() {\n\n  }\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <section class=\"col-lg-12\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h3 class=\"card-title\">New Role</h3>>\n              </div>\n              <div class=\"card-body table-responsive p-0\">\n                <form [formGroup]=\"form\" (ngSubmit)=\"CreateNew_Click()\">\n                  <table class=\"table table-head-fixed text-nowrap\">\n                    <tbody>\n                      <tr>\n                        <td><strong>Role Name</strong></td>\n                        <td>\n                          <mat-form-field class=\"control-width\">\n                            <mat-label>Role Name</mat-label>\n                            <input matInput formControlName=\"roleName\" placeholder=\"Role name\">\n                            <mat-error>\n                              Role name is <strong>required</strong>\n                            </mat-error>\n                          </mat-form-field>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td><strong>Access Module</strong></td>\n                        <td>\n                          <ul class=\"lstStyle\">\n                            <li *ngFor=\"let item of navItem\">\n                              <mat-checkbox (change)=\"ChkModule_Change($event,item.id)\">\n                                {{item.title}}\n                              </mat-checkbox>\n                            </li>\n                          </ul>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { SharedService } from 'src/app/shared/shared.service';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent implements OnInit {\n  form;\n  error;\n  constructor(private fb: FormBuilder, private sharedService: SharedService) { }\n\n  ngOnInit(): void {\n    this.prepareForm();\n  }\n\n  get firstName() {\n    return this.form.get('firstName');\n  }\n  get lastName() {\n    return this.form.get('lastName');\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  get mobileNo() {\n    return this.form.get('mobileNo');\n  }\n\n  public prepareForm() {\n    this.form = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      mobileNo: ['', [Validators.required]]\n    });\n  }\n\n  public Register_Click() {\n    this.error = \"\";\n    if (this.form.valid) {\n      this.form.value['confirmPassword'] = this.password.value;\n      this.sharedService.Signup(this.form.value)\n        .subscribe(result => {\n          if (result['status'] == 'success') {\n\n          } else {\n            this.error = result['msg']\n          }\n        })\n    }\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <section class=\"col-lg-12\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <p class=\"login-box-msg\">Register a new member</p>\n                <form [formGroup]=\"form\" (ngSubmit)=\"Register_Click()\">\n                  <div class=\"signup-panel\" style=\"width: 40%;margin: 0  auto;\">\n                    <div class=\"col-md-12\">\n                      <mat-form-field class=\"control-width\">\n                        <mat-label>First Name</mat-label>\n                        <input matInput formControlName=\"firstName\" placeholder=\"First Name\">\n                        <mat-error>\n                          First name is <strong>required</strong>\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <mat-form-field class=\"control-width\">\n                        <mat-label>Last Name</mat-label>\n                        <input matInput formControlName=\"lastName\" placeholder=\"Last Name\">\n                        <mat-error>\n                          Last name is <strong>required</strong>\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <mat-form-field class=\"control-width\">\n                        <mat-label>Email</mat-label>\n                        <input matInput formControlName=\"email\" type=\"email\" placeholder=\"Email id\">\n                        <mat-error>\n                          Emal is <strong>required</strong>\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <mat-form-field class=\"control-width\">\n                        <mat-label>Password</mat-label>\n                        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\">\n                        <mat-error>\n                          Password is <strong>required</strong>\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <mat-form-field class=\"control-width\">\n                        <mat-label>Mobile no</mat-label>\n                        <input matInput formControlName=\"mobileNo\" placeholder=\"Mobile no.\">\n                        <mat-error>\n                          Mobile no is <strong>required</strong>\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div>\n                      <button class=\"btn btn-primary\">Register</button>\n                    </div>\n                    <div>\n\n                      <p class=\"text-danger\" *ngIf=\"error\">\n                        <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> <strong>Error!</strong> {{error}}\n                      </p>\n\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public New_Click() {\n    this.router.navigateByUrl('/config/new-role');\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <section class=\"col-lg-12\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h3 class=\"card-title\">Roles</h3>\n                <div class=\"card-tools\">\n                  <button type=\"button\" class=\"btn btn-primary btn-xs\" (click)=\"New_Click()\">Add New</button>\n                </div>\n              </div>\n              <div class=\"card-body table-responsive p-0\">\n                <table class=\"table table-head-fixed text-nowrap\">\n                  <thead>\n                    <tr>\n                      <th>Sr No.</th>\n                      <th>Role Name</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <!-- <tr *ngFor=\"let item of Users;let i=index\">\n                      <td>{{i+1}}</td>\n                      <td>{{item.firstName}} {{item.lastName}}</td>\n                    </tr> -->\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/app/shared/shared.service';\nimport { result } from 'lodash';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  public Users: Array<any>;\n  constructor(private sharedService: SharedService) { }\n\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n\n  public loadUsers() {\n    this.sharedService.GetUserList()\n      .subscribe(result => {\n        if (result['status'] == 'success') {\n          this.Users = result['data'];\n        }\n      })\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <section class=\"col-lg-12\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h3 class=\"card-title\">User List</h3>\n\n                <div class=\"card-tools\">\n                  <div class=\"input-group input-group-sm\" style=\"width: 150px;\">\n                    <input type=\"text\" name=\"table_search\" class=\"form-control float-right\" placeholder=\"Search\">\n\n                    <div class=\"input-group-append\">\n                      <button type=\"submit\" class=\"btn btn-default\"><i class=\"fas fa-search\"></i></button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- /.card-header -->\n              <div class=\"card-body table-responsive p-0\" style=\"height: 300px;\">\n                <table class=\"table table-head-fixed text-nowrap\">\n                  <thead>\n                    <tr>\n                      <th>ID</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Mobile No.</th>\n                      <th>Type</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let item of Users;let i=index\">\n                      <td>{{i+1}}</td>\n                      <td>{{item.firstName}} {{item.lastName}}</td>\n                      <td>{{item.email}}</td>\n                      <td>{{item.mobileNo}}</td>\n                      <td>Employee</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <!-- /.card-body -->\n            </div>\n            <!-- /.card -->\n          </div>\n        </div>\n\n      </section>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor(private http: HttpClient) { }\n\n  public GetUserList(): Observable<any> {\n    return this.http.get(environment.api.userList);\n  }\n\n  public Signup(body): Observable<any> {\n    return this.http.post(environment.api.signup, body);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}